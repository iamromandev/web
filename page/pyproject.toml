[project]
name = "page"
version = "0.0.1"
description = "Webpage for romancse.com"
authors = [
    {name = "Roman",email = "iamromandev@gmail.com"}
]
readme = "README.md"
requires-python = "==3.9.21"
dependencies = [
    ## reserved packages
    # for namecheap host issue
    "requests (==2.29.0)",
    ## end reserved packages
    ## core
    # must be installed for TokenAuthentication
    "coreapi (==2.3.3)",
    "loguru (==0.7.3)",
    ## django
    # 4.2 drops support for mariadb 10.3
    "django (==4.1.9)",
    "django-environ (==0.12.0)",
    "django-cors-headers (==4.2.0)",
    "django-browser-reload (==1.11.0)",
    "dj-static (==0.0.6)",
    "django-soft-delete (==0.9.21)",
    "django-taggit (==6.1.0)",
    ## rest
    "djangorestframework (==3.15.1)",
    "djangorestframework-simplejwt (==5.3.1)",
    # "drf-yasg (==1.21.7)",
    # "dj-rest-auth (==4.0.1)",
    ## ui
    "django-bootstrap5 (==23.4)",
    "django-bootstrap-icons (==0.8.4)",
    # "django-tailwind (==3.5.0)",
    "django-crispy-forms (==2.0)",
    "crispy-bootstrap5 (==0.7)",
    ## db
    "pymysql (==1.0.3)",
    ## misc
    "django-phonenumber-field (==7.1.0)",
    # "pillow (==9.5.0)",
    #"wordnik-py3 (==2.1.2)",
    #"libretranslatepy (==2.1.3)",
    # "django-imagekit (==4.1.0)",
]

[tool.poetry]
package-mode = false

[tool.poetry.group.dev.dependencies]
pre-commit = "4.2.0"
ruff = "0.11.2"
mypy = "1.15.0"

[build-system]
requires = ["poetry-core>=2.0.0,<3.0.0"]
build-backend = "poetry.core.masonry.api"

# ruff configuration
[tool.ruff]
# Black formatter default (popular in many Django projects)
line-length = 88
# Adjust to your Python version
target-version = "py39"

[tool.ruff.lint]
select = [
    "E", # pycodestyle errors (formatting)
    "F", # Pyflakes (bug detection)
    "W", # pycodestyle warnings
    "I", # isort (import sorting)
    "D", # pydocstyle (docstring conventions)
    "DJ", # flake8-django (Django-specific checks)
    "UP", # pyupgrade (modern syntax suggestions)
    "N", # pep8-naming (naming conventions)
    "B", # flake8-bugbear (common pitfalls)
]

ignore = [
    "B008",  # Do not perform function calls in argument defaults
    "C408",  # Unnecessary `dict`/`list`/`tuple` call
    "D100",  # Ignore missing docstring in public modules
    "D101",  # Ignore missing docstring in public classes
    "D102",  # Ignore missing docstring in public methods
    "D103",  # Ignore missing docstring in public functions
    "D104",  # Ignore missing docstring in public packages
    "D105",  # Ignore missing docstring in magic methods
    "D106",  # Ignore missing docstring in nested classes
    "D107",  # Ignore missing docstring in __init__ methods
    "E501",  # Line length (you might prefer to handle this with the formatter)
    "F401",  # Allow unused imports
]

# Enable PEP8 naming conventions for Django models
[tool.ruff.lint.pep8-naming]
classmethod-decorators = ["classmethod", "django.utils.decorators.method_decorator"]

[tool.ruff.lint.pydocstyle]
convention = "google"  # or "numpy" if you prefer NumPy-style docstrings

[tool.ruff.format]
quote-style = "double"  # Use double quotes for strings (Django convention)
indent-style = "space"  # Use spaces instead of tabs
line-ending = "auto"  # Auto-detect line endings (LF for Unix, CRLF for Windows)
docstring-code-format = true  # Format code blocks inside docstrings
skip-magic-trailing-comma = false  # Enforce trailing commas where appropriate
